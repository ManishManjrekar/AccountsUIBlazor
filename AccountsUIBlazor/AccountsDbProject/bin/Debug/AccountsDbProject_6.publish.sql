/*
Deployment script for accountancy

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "accountancy"
:setvar DefaultFilePrefix "accountancy"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[CommissionAgentExpenses]...';


GO
CREATE TABLE [dbo].[CommissionAgentExpenses] (
    [CommissionAgentExpensesId] BIGINT           IDENTITY (1, 1) NOT NULL,
    [ExpenseId]                 BIGINT           NULL,
    [Amount]                    BIGINT           NULL,
    [createdBy]                 NVARCHAR (500)   NULL,
    [modifiedDate]              DATETIME         NOT NULL,
    [createdDate]               DATETIME         NOT NULL,
    [modifiedBy]                NVARCHAR (500)   NULL,
    [Id]                        UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_CommisionAgentExpenses] PRIMARY KEY CLUSTERED ([CommissionAgentExpensesId] ASC)
);


GO
PRINT N'Creating Table [dbo].[CommissionAgentPurchases]...';


GO
CREATE TABLE [dbo].[CommissionAgentPurchases] (
    [CommisionAgentPurchasesId] BIGINT           IDENTITY (1, 1) NOT NULL,
    [VendorId]                  BIGINT           NULL,
    [PurchasePrice]             BIGINT           NULL,
    [Quantity]                  BIGINT           NULL,
    [Total]                     BIGINT           NULL,
    [createdDate]               DATETIME         NOT NULL,
    [modifiedDate]              DATETIME         NOT NULL,
    [createdBy]                 NVARCHAR (50)    NULL,
    [modifiedBy]                NVARCHAR (50)    NULL,
    [LoggedInUser]              NVARCHAR (500)   NULL,
    [Id]                        UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_CommissionAgentPurchases] PRIMARY KEY CLUSTERED ([CommisionAgentPurchasesId] ASC)
);


GO
PRINT N'Creating Table [dbo].[CommissionAgentSales]...';


GO
CREATE TABLE [dbo].[CommissionAgentSales] (
    [CommissionAgentSalesId] BIGINT           IDENTITY (1, 1) NOT NULL,
    [VendorId]               BIGINT           NULL,
    [PurchasePrice]          BIGINT           NULL,
    [Quantity]               BIGINT           NULL,
    [Total]                  BIGINT           NULL,
    [createdDate]            DATETIME         NOT NULL,
    [modifiedDate]           DATETIME         NOT NULL,
    [createdBy]              NVARCHAR (50)    NULL,
    [modifiedBy]             NVARCHAR (50)    NULL,
    [LoggedInUser]           NVARCHAR (500)   NULL,
    [Id]                     UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_CommissionAgentSales] PRIMARY KEY CLUSTERED ([CommissionAgentSalesId] ASC)
);


GO
PRINT N'Creating Table [dbo].[CommissionEarned]...';


GO
CREATE TABLE [dbo].[CommissionEarned] (
    [CommissionEarnedId]     BIGINT           IDENTITY (1, 1) NOT NULL,
    [StockInId]              BIGINT           NULL,
    [Amount]                 BIGINT           NULL,
    [createdBy]              NVARCHAR (500)   NULL,
    [modifiedDate]           DATETIME         NOT NULL,
    [createdDate]            DATETIME         NOT NULL,
    [modifiedBy]             NVARCHAR (500)   NULL,
    [CommissionPercentageId] BIGINT           NULL,
    [Id]                     UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_CommissionEarned] PRIMARY KEY CLUSTERED ([CommissionEarnedId] ASC)
);


GO
PRINT N'Creating Table [dbo].[CommissionPercentage]...';


GO
CREATE TABLE [dbo].[CommissionPercentage] (
    [CommissionPercentageId] BIGINT           IDENTITY (1, 1) NOT NULL,
    [Percentage]             FLOAT (53)       NULL,
    [Id]                     UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_CommissionPercentage] PRIMARY KEY CLUSTERED ([CommissionPercentageId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [CustomerId]   INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]    NVARCHAR (MAX) NULL,
    [MiddleName]   NVARCHAR (MAX) NULL,
    [NickName]     NVARCHAR (MAX) NULL,
    [LastName]     NVARCHAR (MAX) NULL,
    [Mobile]       NVARCHAR (50)  NULL,
    [ReferredBy]   NVARCHAR (MAX) NULL,
    [CreatedBy]    NVARCHAR (500) NULL,
    [ModifiedDate] DATETIME       NOT NULL,
    [CreatedDate]  DATETIME       NOT NULL,
    [ModifiedBy]   NVARCHAR (500) NULL,
    [IsActive]     BIT            NULL,
    CONSTRAINT [PK_Customer] PRIMARY KEY CLUSTERED ([CustomerId] ASC)
);


GO
PRINT N'Creating Table [dbo].[CustomerDetails]...';


GO
CREATE TABLE [dbo].[CustomerDetails] (
    [CustAddressId]   INT              IDENTITY (1, 1) NOT NULL,
    [CustId]          BIGINT           NULL,
    [CustAddress]     NVARCHAR (MAX)   NULL,
    [alternateMobile] NVARCHAR (50)    NULL,
    [homePhone]       NVARCHAR (50)    NULL,
    [officePhone]     NVARCHAR (50)    NULL,
    [email]           NVARCHAR (50)    NULL,
    [address]         NVARCHAR (MAX)   NULL,
    [city]            NVARCHAR (MAX)   NULL,
    [state]           NVARCHAR (MAX)   NULL,
    [shopName]        NVARCHAR (MAX)   NULL,
    [shopLocation]    NVARCHAR (MAX)   NULL,
    [Id]              UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_CustomerAddress] PRIMARY KEY CLUSTERED ([CustAddressId] ASC)
);


GO
PRINT N'Creating Table [dbo].[CustomerPaymentReceived]...';


GO
CREATE TABLE [dbo].[CustomerPaymentReceived] (
    [CustomerPaymentId] INT            IDENTITY (1, 1) NOT NULL,
    [CustomerId]        INT            NULL,
    [CustomerName]      NVARCHAR (MAX) NULL,
    [AmountPaid]        INT            NULL,
    [PaymentDate]       DATETIME       NOT NULL,
    [ModifiedDate]      DATETIME       NOT NULL,
    [CreatedBy]         NVARCHAR (50)  NULL,
    [ModifiedBy]        NVARCHAR (50)  NULL,
    [LoggedInUser]      NVARCHAR (500) NULL,
    [TypeOfTransaction] NVARCHAR (50)  NULL,
    [Comments]          NVARCHAR (MAX) NULL,
    [IsActive]          BIT            NULL,
    CONSTRAINT [PK_CustomerPayments] PRIMARY KEY CLUSTERED ([CustomerPaymentId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Expenses]...';


GO
CREATE TABLE [dbo].[Expenses] (
    [ExpenseName]   NVARCHAR (MAX)   NULL,
    [ExpenseTypeId] BIGINT           NULL,
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_Expenses] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Sales]...';


GO
CREATE TABLE [dbo].[Sales] (
    [SalesId]      INT            IDENTITY (1, 1) NOT NULL,
    [CustomerId]   INT            NULL,
    [VendorId]     INT            NULL,
    [StockInId]    INT            NULL,
    [Quantity]     INT            NOT NULL,
    [Price]        INT            NOT NULL,
    [Total]        INT            NOT NULL,
    [Type]         NVARCHAR (50)  NULL,
    [CreatedDate]  DATETIME       NOT NULL,
    [ModifiedDate] DATETIME       NOT NULL,
    [CreatedBy]    NVARCHAR (50)  NULL,
    [LoggedInUser] NVARCHAR (500) NULL,
    [IsActive]     BIT            NOT NULL,
    CONSTRAINT [PK_Sales] PRIMARY KEY CLUSTERED ([SalesId] ASC)
);


GO
PRINT N'Creating Table [dbo].[SalesReturns]...';


GO
CREATE TABLE [dbo].[SalesReturns] (
    [StockInId]    BIGINT           NULL,
    [CustId]       BIGINT           NULL,
    [ProductType]  INT              NULL,
    [Quantity]     BIGINT           NULL,
    [Price]        BIGINT           NULL,
    [Total]        BIGINT           NULL,
    [createdDate]  DATETIME         NOT NULL,
    [modifiedDate] DATETIME         NOT NULL,
    [createdBy]    NVARCHAR (50)    NULL,
    [modifiedBy]   NVARCHAR (50)    NULL,
    [LoggedInUser] NVARCHAR (500)   NULL,
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_SalesReturns_1] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[StockIn]...';


GO
CREATE TABLE [dbo].[StockIn] (
    [StockInId]     INT            IDENTITY (1, 1) NOT NULL,
    [CreatedDate]   DATETIME       NOT NULL,
    [LoadName]      NVARCHAR (MAX) NOT NULL,
    [ModifiedDate]  DATETIME       NULL,
    [LoginID]       NVARCHAR (MAX) NULL,
    [isActive]      BIT            NOT NULL,
    [Quantity]      INT            NOT NULL,
    [IsPaymentDone] BIT            NULL,
    [VendorId]      INT            NULL,
    [VendorName]    NVARCHAR (MAX) NULL,
    [CreatedBy]     NVARCHAR (500) NULL,
    CONSTRAINT [PK_StockIn_1] PRIMARY KEY CLUSTERED ([StockInId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Vendor]...';


GO
CREATE TABLE [dbo].[Vendor] (
    [VendorId]            INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]           NVARCHAR (500) NULL,
    [MiddleName]          NVARCHAR (500) NULL,
    [LastName]            NVARCHAR (500) NULL,
    [Mobile]              NVARCHAR (500) NULL,
    [CreatedDate]         DATETIME       NOT NULL,
    [ModifiedDate]        DATETIME       NOT NULL,
    [CreatedBy]           NVARCHAR (50)  NULL,
    [ModifiedBy]          NVARCHAR (50)  NULL,
    [IsActive]            BIT            NULL,
    [ReferredBy]          NVARCHAR (500) NULL,
    [ElectronicPaymentId] NVARCHAR (500) NULL,
    [Address]             NVARCHAR (500) NULL,
    [City]                NVARCHAR (50)  NULL,
    [State]               NVARCHAR (50)  NULL,
    CONSTRAINT [PK_Vendor] PRIMARY KEY CLUSTERED ([VendorId] ASC)
);


GO
PRINT N'Creating Table [dbo].[VendorAdvances]...';


GO
CREATE TABLE [dbo].[VendorAdvances] (
    [VendorId]                  BIGINT           NULL,
    [Amount]                    BIGINT           NULL,
    [createdDate]               DATETIME         NOT NULL,
    [modifiedDate]              DATETIME         NOT NULL,
    [createdBy]                 NVARCHAR (50)    NULL,
    [modifiedBy]                NVARCHAR (50)    NULL,
    [Id]                        UNIQUEIDENTIFIER NOT NULL,
    [IsCompletePaymentReceived] BIT              NULL,
    CONSTRAINT [PK_VendorAdvances_1] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[VendorAdvancesReturned]...';


GO
CREATE TABLE [dbo].[VendorAdvancesReturned] (
    [VendorId]     BIGINT           NULL,
    [Amount]       BIGINT           NULL,
    [createdDate]  DATETIME         NOT NULL,
    [modifiedDate] DATETIME         NOT NULL,
    [createdBy]    NVARCHAR (50)    NULL,
    [modifiedBy]   NVARCHAR (50)    NULL,
    [LoggedInUser] NVARCHAR (500)   NULL,
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_VendorAdvancesReturned_1] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[VendorDetails]...';


GO
CREATE TABLE [dbo].[VendorDetails] (
    [VendorId]        BIGINT           NULL,
    [homePhone]       NVARCHAR (500)   NULL,
    [address]         NVARCHAR (MAX)   NULL,
    [city]            NVARCHAR (500)   NULL,
    [state]           NVARCHAR (500)   NULL,
    [alternateMobile] NVARCHAR (500)   NULL,
    [email]           NVARCHAR (500)   NULL,
    [Id]              UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_VendorDetails] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[VendorExpenses]...';


GO
CREATE TABLE [dbo].[VendorExpenses] (
    [StockInId]    BIGINT           NULL,
    [ExpenseId]    BIGINT           NULL,
    [Amount]       BIGINT           NULL,
    [createdBy]    NVARCHAR (500)   NULL,
    [modifiedDate] DATETIME         NOT NULL,
    [createdDate]  DATETIME         NOT NULL,
    [modifiedBy]   NVARCHAR (500)   NULL,
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_VendorExpenses_1] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[VendorPayments]...';


GO
CREATE TABLE [dbo].[VendorPayments] (
    [VendorPaymentId]   INT            IDENTITY (1, 1) NOT NULL,
    [AmountPaid]        BIGINT         NULL,
    [CreatedDate]       DATETIME       NOT NULL,
    [ModifiedDate]      DATETIME       NOT NULL,
    [LoggedInUser]      NVARCHAR (500) NULL,
    [VendorId]          INT            NOT NULL,
    [StockInId]         INT            NOT NULL,
    [TypeOfTransaction] NVARCHAR (50)  NULL,
    [Comments]          NVARCHAR (MAX) NULL,
    [IsActive]          BIT            NULL,
    CONSTRAINT [PK_VendorPayments] PRIMARY KEY CLUSTERED ([VendorPaymentId] ASC)
);


GO
PRINT N'Creating Default Constraint [dbo].[DF_CommisionAgentExpenses_modifiedDate]...';


GO
ALTER TABLE [dbo].[CommissionAgentExpenses]
    ADD CONSTRAINT [DF_CommisionAgentExpenses_modifiedDate] DEFAULT (getdate()) FOR [modifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CommisionAgentExpenses_createdDate]...';


GO
ALTER TABLE [dbo].[CommissionAgentExpenses]
    ADD CONSTRAINT [DF_CommisionAgentExpenses_createdDate] DEFAULT (getdate()) FOR [createdDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CommissionAgentPurchases_createdDate]...';


GO
ALTER TABLE [dbo].[CommissionAgentPurchases]
    ADD CONSTRAINT [DF_CommissionAgentPurchases_createdDate] DEFAULT (getdate()) FOR [createdDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CommissionAgentPurchases_modifiedDate]...';


GO
ALTER TABLE [dbo].[CommissionAgentPurchases]
    ADD CONSTRAINT [DF_CommissionAgentPurchases_modifiedDate] DEFAULT (getdate()) FOR [modifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CommissionAgentSales_createdDate]...';


GO
ALTER TABLE [dbo].[CommissionAgentSales]
    ADD CONSTRAINT [DF_CommissionAgentSales_createdDate] DEFAULT (getdate()) FOR [createdDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CommissionAgentSales_modifiedDate]...';


GO
ALTER TABLE [dbo].[CommissionAgentSales]
    ADD CONSTRAINT [DF_CommissionAgentSales_modifiedDate] DEFAULT (getdate()) FOR [modifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CommissionEarned_modifiedDate]...';


GO
ALTER TABLE [dbo].[CommissionEarned]
    ADD CONSTRAINT [DF_CommissionEarned_modifiedDate] DEFAULT (getdate()) FOR [modifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CommissionEarned_createdDate]...';


GO
ALTER TABLE [dbo].[CommissionEarned]
    ADD CONSTRAINT [DF_CommissionEarned_createdDate] DEFAULT (getdate()) FOR [createdDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_modifiedDate]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_modifiedDate] DEFAULT (getdate()) FOR [ModifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_modifiedDate1]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_modifiedDate1] DEFAULT (getdate()) FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Customer_IsActive]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD CONSTRAINT [DF_Customer_IsActive] DEFAULT ((1)) FOR [IsActive];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerPayments_createdDate]...';


GO
ALTER TABLE [dbo].[CustomerPaymentReceived]
    ADD CONSTRAINT [DF_CustomerPayments_createdDate] DEFAULT (getdate()) FOR [PaymentDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_CustomerPayments_modifiedDate]...';


GO
ALTER TABLE [dbo].[CustomerPaymentReceived]
    ADD CONSTRAINT [DF_CustomerPayments_modifiedDate] DEFAULT (getdate()) FOR [ModifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Sales_createdDate]...';


GO
ALTER TABLE [dbo].[Sales]
    ADD CONSTRAINT [DF_Sales_createdDate] DEFAULT (getdate()) FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Sales_modifiedDate]...';


GO
ALTER TABLE [dbo].[Sales]
    ADD CONSTRAINT [DF_Sales_modifiedDate] DEFAULT (getdate()) FOR [ModifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Sales_IsActive]...';


GO
ALTER TABLE [dbo].[Sales]
    ADD CONSTRAINT [DF_Sales_IsActive] DEFAULT ((1)) FOR [IsActive];


GO
PRINT N'Creating Default Constraint [dbo].[DF_SalesReturns_createdDate]...';


GO
ALTER TABLE [dbo].[SalesReturns]
    ADD CONSTRAINT [DF_SalesReturns_createdDate] DEFAULT (getdate()) FOR [createdDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_SalesReturns_modifiedDate]...';


GO
ALTER TABLE [dbo].[SalesReturns]
    ADD CONSTRAINT [DF_SalesReturns_modifiedDate] DEFAULT (getdate()) FOR [modifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_StockIn_isActive]...';


GO
ALTER TABLE [dbo].[StockIn]
    ADD CONSTRAINT [DF_StockIn_isActive] DEFAULT ((1)) FOR [isActive];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Vendor]...';


GO
ALTER TABLE [dbo].[Vendor]
    ADD DEFAULT (getdate()) FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Vendor]...';


GO
ALTER TABLE [dbo].[Vendor]
    ADD DEFAULT (getdate()) FOR [ModifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Vendor_IsActive]...';


GO
ALTER TABLE [dbo].[Vendor]
    ADD CONSTRAINT [DF_Vendor_IsActive] DEFAULT ((1)) FOR [IsActive];


GO
PRINT N'Creating Default Constraint [dbo].[DF_VendorAdvances_createdDate]...';


GO
ALTER TABLE [dbo].[VendorAdvances]
    ADD CONSTRAINT [DF_VendorAdvances_createdDate] DEFAULT (getdate()) FOR [createdDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_VendorAdvances_modifiedDate]...';


GO
ALTER TABLE [dbo].[VendorAdvances]
    ADD CONSTRAINT [DF_VendorAdvances_modifiedDate] DEFAULT (getdate()) FOR [modifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_VendorAdvancesReturned_createdDate]...';


GO
ALTER TABLE [dbo].[VendorAdvancesReturned]
    ADD CONSTRAINT [DF_VendorAdvancesReturned_createdDate] DEFAULT (getdate()) FOR [createdDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_VendorAdvancesReturned_modifiedDate]...';


GO
ALTER TABLE [dbo].[VendorAdvancesReturned]
    ADD CONSTRAINT [DF_VendorAdvancesReturned_modifiedDate] DEFAULT (getdate()) FOR [modifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_VendorExpenses_modifiedDate]...';


GO
ALTER TABLE [dbo].[VendorExpenses]
    ADD CONSTRAINT [DF_VendorExpenses_modifiedDate] DEFAULT (getdate()) FOR [modifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_VendorExpenses_createdDate]...';


GO
ALTER TABLE [dbo].[VendorExpenses]
    ADD CONSTRAINT [DF_VendorExpenses_createdDate] DEFAULT (getdate()) FOR [createdDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_VendorPayments_createdDate]...';


GO
ALTER TABLE [dbo].[VendorPayments]
    ADD CONSTRAINT [DF_VendorPayments_createdDate] DEFAULT (getdate()) FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_VendorPayments_modifiedDate]...';


GO
ALTER TABLE [dbo].[VendorPayments]
    ADD CONSTRAINT [DF_VendorPayments_modifiedDate] DEFAULT (getdate()) FOR [ModifiedDate];


GO
PRINT N'Creating Foreign Key [dbo].[FK_CommissionEarned_CommissionPercentage]...';


GO
ALTER TABLE [dbo].[CommissionEarned]
    ADD CONSTRAINT [FK_CommissionEarned_CommissionPercentage] FOREIGN KEY ([CommissionPercentageId]) REFERENCES [dbo].[CommissionPercentage] ([CommissionPercentageId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Sales_StockIn]...';


GO
ALTER TABLE [dbo].[Sales]
    ADD CONSTRAINT [FK_Sales_StockIn] FOREIGN KEY ([StockInId]) REFERENCES [dbo].[StockIn] ([StockInId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Sales_Vendor]...';


GO
ALTER TABLE [dbo].[Sales]
    ADD CONSTRAINT [FK_Sales_Vendor] FOREIGN KEY ([VendorId]) REFERENCES [dbo].[Vendor] ([VendorId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Sales_Customer]...';


GO
ALTER TABLE [dbo].[Sales]
    ADD CONSTRAINT [FK_Sales_Customer] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Customer] ([CustomerId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_StockIn_Vendor]...';


GO
ALTER TABLE [dbo].[StockIn]
    ADD CONSTRAINT [FK_StockIn_Vendor] FOREIGN KEY ([VendorId]) REFERENCES [dbo].[Vendor] ([VendorId]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
